public class Solution {
    /**
     * @param grid: A list of lists of integers
     * @return: An integer
     */
    public int uniquePathsWithObstacles(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] matrix = new int[m][n];
        if(grid[0][0]==1){
            matrix[0][0] = 0;
            }
        else{
            matrix[0][0] = 1;
        }
        for(int i=1; i<m; i++){
            if(grid[i][0]==1){
                matrix[i][0] = 0;
            }
            else{
                matrix[i][0] = matrix[i-1][0];   
                System.out.println("row " + i);
            }    
        }
        for(int i=1; i<n; i++){
            if(grid[0][i]==1){
                matrix[0][i] = 0;
            }
            else{
                matrix[0][i] = matrix[0][i-1];   
            }    
        }
        for(int r=1; r<m; r++){
            for(int c=1; c<n; c++){
                if(grid[r][c]==1){
                    matrix[r][c] = 0;
                }
                else{
                    matrix[r][c] = matrix[r-1][c] + matrix[r][c-1];
                }
            }
        }
        return matrix[m-1][n-1];
    }
}
