public class Solution {
    /**
     * @param nums: the given array
     * @param k: the given number
     * @return:  whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k
     */
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        if(k < 1){
            return false;
        }
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i<nums.length; i++){
            if(map.containsKey(nums[i])){
                int diff = map.get(nums[i])-i;
                if((-diff <= k && diff <= 0 || diff <= k && diff >= 0)){
                    return true;
                }
            }
            map.put(nums[i], i);    //allowed to change value of key because the difference in indices would only increase, keeping it impossible for the difference to be <= k
        }
        return false;
    }
}
