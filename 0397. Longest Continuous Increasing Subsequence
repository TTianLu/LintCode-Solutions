public class Solution {
    /**
     * @param A: An array of Integer
     * @return: an integer
     */
    public int longestIncreasingContinuousSubsequence(int[] nums) {
        if(nums.length < 1){
            return 0;
        }
        if(nums.length < 2){
            return 1;
        }
        int max = 1;
        int curr=1;
        if(nums[1] - nums[0] != 0){
            curr = 2;
        }
        for(int i = 1; i<nums.length - 1; i++){
            if((nums[i+1]-nums[i]) * (nums[i] - nums[i-1]) > 0){
                curr++;
            }
            else{
                max = Math.max(max, curr);
                if(nums[i+1] - nums[i] != 0){
                    curr = 2;
                }
            }
        }
        max = Math.max(max, curr);
        return max;
    }
}
