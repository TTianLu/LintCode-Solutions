public class Solution {
    /**
     * @param nums: an integer array
     * @return: nothing
     */
    public void moveZeroes(int[] nums) {
        int nextZero = nums.length - 1;
        int i = nextZero-1;   //going backwards
        while(i >= 0){
            if(nums[i] == 0){
                moveRight(nums,i, nextZero);
                nextZero--;
            }
            i--;
        }
    }
    
    public void moveRight(int[] nums, int from, int to){
        for(int i = from; i < to; i++){
            int temp = nums[i]; //swap function
            nums[i] = nums[i+1];
            nums[i+1] = temp;
        }
    }
}


//another version moves all non-zeroes to the front
public class Solution {
    /**
     * @param nums: an integer array
     * @return: nothing
     */
    public void moveZeroes(int[] nums) {
        int to = 0; //where non-zero digits will land
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0){
                int temp = nums[i];
                nums[i] = nums[to];
                nums[to++] = temp;
            }
        }
    }
}
